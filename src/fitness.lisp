(defun new-suite (parameters lower upper sample-pts)
  (setf *sample-suite* NIL)
  (dotimes (i sample-pts)
    (let ((scene NIL))
      (dotimes (j (length parameters))
        (push (+ lower (random (float (- upper lower)))) scene))
      (push scene *sample-suite*))))

(defun fitness (candidate answer parameters)
  (let ((err 0))
    (dolist (scene *sample-suite*)
      (let ((try (progv parameters scene (eval candidate)))
            (truth (progv parameters scene (eval answer))))
        ;(print (list try truth))
        (incf err (abs (- truth try)))))
    (values (round err))))
